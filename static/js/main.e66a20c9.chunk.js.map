{"version":3,"sources":["context/TransactionContext.js","components/Header/Date.js","components/Header/Budget.js","components/Header/Header.js","utils/calculateTotal.js","components/Transaction/TransactionItem.js","utils/itemPercentage.js","components/Transaction/TransactionList.js","components/Input/TransactionInput.js","components/Totals/TotalExpense.js","components/Totals/TotalIncome.js","components/Totals/Totals.js","utils/state.js","utils/localstorage.js","container/App.js","index.js"],"names":["TransactionContext","createContext","DisplayDate","Heading","as","size","date","Date","getMonth","Budget","budget","color","value","displayType","thousandSeparator","prefix","Header","transaction","length","map","t","reduce","acc","curr","calcBudget","useContext","TransactionItem","item","deleteTransaction","isExpense","percent","totalIncome","filter","v","Math","round","itemPercentage","List","className","borderBottom","marginBottom","display","justifyContent","paddingBottom","Text","description","style","border","borderRadius","padding","marginLeft","onClick","id","Icon","name","TransactionList","textAlign","fontSize","key","TransactionInput","useState","setItem","select","setSelect","bg","setBg","addTransaction","handleInput","e","target","useEffect","onSubmit","preventDefault","FormControl","FormLabel","htmlFor","Input","onChange","type","placeholder","isRequired","Flex","flexBasis","Select","backgroundColor","borderColor","FormHelperText","Button","variantColor","minW","TotalExpense","totalExpense","totalExpensePercent","console","log","fontWeight","paddingY","TotalIncome","Totals","abs","calcTotalExpense","calcTotalIncome","totalPercentage","useData","state","setState","Transactions","data","setData","Transaction","storageState","JSON","parse","localStorage","getItem","stringify","newItem","uuidv4","parseInt","App","ThemeProvider","CSSReset","Provider","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEaA,EAAqBC,wBAAc,I,QCCjC,SAASC,IA4BtB,OACE,kBAACC,EAAA,EAAD,CAASC,GAAG,KAAKC,KAAK,MAAtB,uBA3BW,WACX,IAAIC,EAqBN,OAnBAA,EAAO,IAAIC,KAIH,CACN,UACA,UACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGWD,EAAKE,YAMOF,I,YC7BZ,SAASG,EAAT,GAA2B,IAAVC,EAAS,EAATA,OAC9B,OACE,kBAACP,EAAA,EAAD,CAAUQ,MAAOD,EAAS,EAAI,WAAa,aAAcN,GAAG,KAAKC,KAAK,MAClE,kBAAC,IAAD,CACEO,MAAOF,EACPG,YAAa,OACbC,mBAAmB,EACnBC,OAAQL,EAAS,EAAI,MAAQ,QCLxB,SAASM,IAAU,IAG1BN,ECTkB,SAACO,GAMzB,OAJEA,EAAYC,OAAS,EACjBD,EAAYE,KAAI,SAACC,GAAD,OAAOA,EAAER,SAAOS,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,KAC5D,EDKSC,CAFOC,qBAAWzB,GAA1BiB,aAIP,OACE,oCAEE,kBAAC,EAAD,MACA,kBAACR,EAAD,CAAQC,OAAQA,K,4BETP,SAASgB,EAAT,GAAoC,IAATC,EAAQ,EAARA,KAAQ,EACLF,qBAAWzB,GAA9CiB,EADwC,EACxCA,YAAaW,EAD2B,EAC3BA,kBAMfC,EAAYF,EAAKf,MAAQ,EAEzBkB,ECfsB,SAACD,EAAWZ,EAAaU,GACrD,GAAIE,EAAW,CACb,IACME,EACJd,EAAYE,KAAI,SAACC,GAAD,OAAOA,EAAER,SAAOoB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAAGf,OAAS,EAC1DD,EACGE,KAAI,SAACC,GAAD,OAAOA,EAAER,SACboB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAClBZ,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,KAC/B,EAMN,OALIQ,EAAc,GAAKA,EAAcJ,EAAKf,MAAQ,EACtCsB,KAAKC,MAAOR,EAAKf,MAAQmB,EAAe,KAExC,MDEEK,CAAeP,EAAWZ,EAAaU,GAEvD,OACE,oCACE,kBAACU,EAAA,EAAD,CACEC,UAAU,2BACVC,aAAa,oBACbC,aAAa,MACbC,QAAQ,OACRC,eAAe,gBACfC,cAAc,OAEd,kBAACC,EAAA,EAAD,KAAOjB,EAAKkB,aACZ,kBAACD,EAAA,EAAD,CAAMjC,MAAOgB,EAAKf,MAAQ,EAAI,WAAa,cACzC,kBAAC,IAAD,CACEA,MAAOe,EAAKf,MACZC,YAAa,OACbC,mBAAmB,EACnBC,OAAQY,EAAKf,MAAQ,EAAI,MAAQ,OAElCiB,EACC,0BACEiB,MAAO,CACLC,OAAQ,oBACRC,aAAc,MACdC,QAAS,MACTC,WAAY,QAGbpB,EARH,IAQa,KAGb,GAEF,0BAAMqB,QAxCO,WACnBvB,EAAkBD,EAAKyB,MAwCf,kBAACC,EAAA,EAAD,CACEf,UAAU,cACVgB,KAAK,SACLjD,KAAK,OACLM,MAAM,gBEjDL,SAAS4C,EAAT,GAAgD,IAArB3B,EAAoB,EAApBA,kBAEjCX,EAAeQ,qBAAWzB,GAA1BiB,YAEP,OACE,kBAACoB,EAAA,EAAD,KACG,kBAACO,EAAA,EAAD,CAAMY,UAAU,SAASC,SAAS,MAAlC,uBACGxC,EAAYE,KAAI,SAAAQ,GAAI,OAAI,kBAACD,EAAD,CAAiBgC,IAAK/B,EAAKyB,GAAIzB,KAAMA,EAAMC,kBAAmBA,Q,oFCCjF,SAAS+B,IAAoB,IAAD,EACjBC,mBAAS,CAC/Bf,YAAa,GACbjC,MAAO,KAHgC,mBAClCe,EADkC,KAC5BkC,EAD4B,OAMbD,mBAAS,KANI,mBAMlCE,EANkC,KAM1BC,EAN0B,OAQrBH,mBAAS,UARY,mBAQlCI,EARkC,KAQ9BC,EAR8B,KAUjCC,EAAmBzC,qBAAWzB,GAA9BkE,eAEFC,EAAc,SAACC,GACnBP,EAAQ,2BACHlC,GADE,kBAEJyC,EAAEC,OAAOf,KAAOc,EAAEC,OAAOzD,UA+B9B,OAXA0D,qBAAU,WAGNL,EADa,MAAXH,EACI,UAEA,YAGP,CAACA,IAIF,0BAAMhB,MAAO,CAAEN,aAAc,QAAU+B,SA5BpB,SAACH,GACpBA,EAAEI,iBACuB,KAArB7C,EAAKkB,aAAqC,KAAflB,EAAKf,OAA+B,IAAfe,EAAKf,QAEvDsD,EAAevC,EAAMmC,GACrBD,EAAQ,CACNhB,YAAa,GACbjC,MAAO,QAsBT,kBAAC6D,EAAA,EAAD,CAAajC,aAAa,OACxB,kBAACkC,EAAA,EAAD,CAAWC,QAAQ,eAAnB,eACA,kBAACC,EAAA,EAAD,CACEnB,SAAS,KACToB,SAAUV,EACVb,KAAK,cACL1C,MAAOe,EAAKkB,YACZiC,KAAK,OACLnE,MAAM,QACNoE,YAAY,mBACZC,YAAU,KAGd,kBAACP,EAAA,EAAD,CAAajC,aAAa,QACxB,kBAACkC,EAAA,EAAD,CAAWC,QAAQ,SAAnB,UACA,kBAACM,EAAA,EAAD,CAAMvC,eAAe,iBACnB,kBAACkC,EAAA,EAAD,CACEnB,SAAS,KACTqB,KAAK,SACLnE,MAAM,QACNC,MAAOe,EAAKf,MACZiE,SAAUV,EACVb,KAAK,QACLyB,YAAY,MACZG,UAAU,MACVF,YAAU,IAEZ,kBAACG,EAAA,EAAD,CACEC,gBAAiBpB,EACjBqB,YAAarB,EACbrD,MAAM,QACNuE,UAAU,MACVL,SAjDW,SAACT,GACpBL,EAAUK,EAAEC,OAAOzD,QAiDXA,MAAOkD,GAEP,4BAAQlD,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAGJ,kBAAC0E,EAAA,EAAD,CAAgB7B,SAAS,KAAKL,GAAG,oBAAoBI,UAAU,SAA/D,4BAIF,kBAAC+B,EAAA,EAAD,CAAQT,KAAK,SAASU,aAAa,OAAOC,KAAK,QAA/C,WCnGS,SAASC,EAAT,GAA8D,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,oBAGnD,OAFAC,QAAQC,IAAI,aAGV,6BACE,kBAAClD,EAAA,EAAD,CAAMY,UAAU,QAAQC,SAAS,KAAKsC,WAAW,QAAjD,YAGA,wBAAIjD,MAAO,CAAEuC,YAAa,aAC1B,kBAACzC,EAAA,EAAD,CAAMoD,SAAS,OAAOxC,UAAU,QAAQC,SAAS,KAAK9C,MAAM,cAC1D,kBAAC,IAAD,CACEC,MAAO+E,EACP9E,YAAa,OACbC,mBAAmB,EACnBC,OAAQ,QAEV,0BAAM+B,MAAO,CAAEC,OAAQ,oBAAqBC,aAAc,MAAOC,QAAQ,MAAOC,WAAW,QACxF0C,EAAsB,EAAIA,EAAsB,KADnD,IAC0D,OClBnD,SAASK,EAAT,GAAqC,IAAflE,EAAc,EAAdA,YAEnC,OACE,6BACE,kBAACa,EAAA,EAAD,CAAMY,UAAU,QAAQC,SAAS,KAAKsC,WAAW,QAAjD,UAGA,wBAAIjD,MAAO,CAAEuC,YAAa,aAC1B,kBAACzC,EAAA,EAAD,CAAOoD,SAAS,OAAOxC,UAAU,QAAQ7C,MAAM,YAC/C,kBAAC,IAAD,CAAcC,MAAOmB,EAAalB,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,UCN/E,SAASmF,IAAU,IAEzBjF,EAAeQ,qBAAWzB,GAA1BiB,YAED0E,EPFwB,SAAC1E,GAY/B,OATEA,EAAYE,KAAI,SAACC,GAAD,OAAOA,EAAER,SAAOoB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAAGf,OAAS,EAC1DgB,KAAKiE,IACHlF,EACGE,KAAI,SAACC,GAAD,OAAOA,EAAER,SACboB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAClBZ,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,MAEjC,EORe6E,CAAiBnF,GAEhCc,EPYuB,SAACd,GAY9B,OATEA,EAAYE,KAAI,SAACC,GAAD,OAAOA,EAAER,SAAOoB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAAGf,OAAS,EAC1DgB,KAAKiE,IACHlF,EACGE,KAAI,SAACC,GAAD,OAAOA,EAAER,SACboB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAClBZ,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,MAEjC,EOtBc8E,CAAgBpF,GAE9B2E,ELIuB,SAAC3E,EAAa0E,GAC3C,IAAM5D,EACJd,EAAYE,KAAI,SAACC,GAAD,OAAOA,EAAER,SAAOoB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAAGf,OAAS,EAC1DD,EACGE,KAAI,SAACC,GAAD,OAAOA,EAAER,SACboB,QAAO,SAACC,GAAD,OAAOA,EAAI,KAClBZ,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,KAC/B,EAUN,OAPIQ,EAAc,GAAKA,EAAc4D,EAAe,EAErCzD,KAAKC,MAAOwD,EAAe5D,EAAe,MAEzC,EKlBYuE,CAAgBrF,EAAa0E,GAGzD,OACE,yBAAKrD,UAAU,SAASQ,MAAO,CAACN,aAAe,SAC7C,kBAACyD,EAAD,CAAalE,YAAaA,IAC1B,kBAAC2D,EAAD,CAAcC,aAAcA,EAAcC,oBAAqBA,K,oBCjBxDW,EAAU,WAAO,ICAEC,EAAOC,EDAV,EACH7C,mBAAS,CAC/B8C,aAAc,KAFW,mBACpBC,EADoB,KACdC,EADc,KA8B3B,OC9B8BJ,ED4BdG,EC5BqBF,ED4BfG,EC3BtBtC,qBAAU,WACR,GAAIkC,EAAMK,YAAa,CACrB,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QALzB,cAMpBT,EAASK,OAIbxC,qBAAU,WACR2C,aAAapD,QAXS,YAWkBkD,KAAKI,UAAUX,MACtD,CAACA,IDoBG,CACLG,OACAzC,eA3BqB,SAACvC,EAAMmD,GAAU,IAChCjC,EAAuBlB,EAAvBkB,YAAajC,EAAUe,EAAVf,MAEnBA,EAAiB,MAATkE,EAAA,WAAmBlE,GAAUA,EAErCiF,QAAQC,IAAIhB,GAEZ,IACMsC,EAAU,CACdhE,GAFSiE,cAGTxE,cACAjC,MAAO0G,SAAS1G,IAElBgG,EAAQ,2BAAKD,GAAN,IAAYD,aAAa,GAAD,mBAAMC,EAAKD,cAAX,CAAyBU,QAexDxF,kBAZwB,SAACwB,GACzBwD,EAAQ,2BACHD,GADE,IAELD,aAAcC,EAAKD,aAAa1E,QAAO,SAACL,GAAD,OAAUA,EAAKyB,KAAOA,WEQpDmE,MAxBf,WAAgB,IAAD,EACsChB,IAA5CI,EADM,EACNA,KAAMzC,EADA,EACAA,eAAgBtC,EADhB,EACgBA,kBAE7B,OACE,kBAAC4F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MAEE,kBAACzH,EAAmB0H,SAApB,CAA6B9G,MAAO,CAClCK,YAAc0F,EAAKD,aACnBxC,iBACAtC,sBAEA,8BACA,kBAACZ,EAAD,CAAQ2G,aAAchB,EAAKD,eAC3B,kBAACR,EAAD,MACA,kBAACvC,EAAD,MACA,kBAACJ,EAAD,UCxBVqE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e66a20c9.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nexport const TransactionContext = createContext({})","import React, {  } from \"react\";\nimport { Heading } from \"@chakra-ui/core\";\n\nexport default function DisplayDate() {\n\n  const date = () => {\n    let date, month;\n\n  date = new Date();\n\n  // year = date.getFullYear();\n\n  month = [\n    \"January\",\n    \"Febuary\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  return month[date.getMonth()]\n\n  }\n\n  return (\n    <Heading as=\"h2\" size=\"md\">\n      Available budget in {date()}\n    </Heading>\n  );\n}\n","import React from 'react'\nimport { Heading } from '@chakra-ui/core'\nimport NumberFormat from 'react-number-format'\n\nexport default function Budget({budget}) {\n  return (\n    <Heading  color={budget > 0 ? \"teal.500\" : \"orange.500\"} as=\"h2\" size=\"lg\">\n        <NumberFormat\n          value={budget}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={budget > 0 ? \"+ $\" : \" $\"}\n        />\n      </Heading>\n  )\n}\n","import React, { useContext } from \"react\";\nimport { TransactionContext } from \"../../context/TransactionContext\";\nimport { calcBudget } from \"../../utils/calculateTotal\";\nimport Date from \"./Date\";\nimport Budget from \"./Budget\";\n\nexport default function Header() {\n  const {transaction} = useContext(TransactionContext);\n\n  const budget = calcBudget(transaction)\n\n  return (\n    <>\n\n      <Date/>\n      <Budget budget={budget}/>\n    </>\n  );\n}\n","export const calcBudget = (transaction) => {\n  const budget =\n    transaction.length > 0\n      ? transaction.map((t) => t.value).reduce((acc, curr) => acc + curr)\n      : 0;\n\n  return budget    \n} \n\nexport const calcTotalExpense = (transaction) => {\n\n  const totalExpense =\n    transaction.map((t) => t.value).filter((v) => v < 0).length > 0\n      ? Math.abs(\n          transaction\n            .map((t) => t.value)\n            .filter((v) => v < 0)\n            .reduce((acc, curr) => acc + curr)\n        )\n      : 0;\n\n  return totalExpense\n\n}\n\nexport const calcTotalIncome = (transaction) => {\n\n  const totalIncome =\n    transaction.map((t) => t.value).filter((v) => v > 0).length > 0\n      ? Math.abs(\n          transaction\n            .map((t) => t.value)\n            .filter((v) => v > 0)\n            .reduce((acc, curr) => acc + curr)\n        )\n      : 0;\n\n  return totalIncome\n\n}","import React, { useContext } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { ListItem, Text, Icon } from \"@chakra-ui/core\";\nimport { TransactionContext } from \"../../context/TransactionContext\";\nimport { itemPercentage } from \"../../utils/itemPercentage\";\n\nexport default function TransactionItem({ item }) {\n  const { transaction, deleteTransaction } = useContext(TransactionContext);\n\n  const handleDelete = () => {\n    deleteTransaction(item.id);\n  };\n\n  const isExpense = item.value < 0 ? true : false;\n\n  const percent = itemPercentage(isExpense, transaction, item);\n\n  return (\n    <>\n      <ListItem\n        className=\"transaction_item fade_in\"\n        borderBottom=\"1px solid #4A5568\"\n        marginBottom=\"5px\"\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        paddingBottom=\"5px\"\n      >\n        <Text>{item.description}</Text>\n        <Text color={item.value > 0 ? \"teal.500\" : \"orange.500\"}>\n          <NumberFormat\n            value={item.value}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={item.value > 0 ? \"+ $\" : \" $\"}\n          />\n          {isExpense ? (\n            <span\n              style={{\n                border: \"1px solid #DD6B20\",\n                borderRadius: \"5px\",\n                padding: \"5px\",\n                marginLeft: \"5px\",\n              }}\n            >\n              {percent}%{\" \"}\n            </span>\n          ) : (\n            \"\"\n          )}\n          <span onClick={handleDelete}>\n            <Icon\n              className=\"delete_icon\"\n              name=\"delete\"\n              size=\"15px\"\n              color=\"red.500\"\n            />\n          </span>\n        </Text>\n      </ListItem>\n    </>\n  );\n}\n","export const itemPercentage = (isExpense, transaction, item) => {\n  if (isExpense) {\n    let percent;\n    const totalIncome =\n      transaction.map((t) => t.value).filter((v) => v > 0).length > 0\n        ? transaction\n            .map((t) => t.value)\n            .filter((v) => v > 0)\n            .reduce((acc, curr) => acc + curr)\n        : 0;\n    if (totalIncome > 0 && totalIncome - item.value > 0) {\n      percent = Math.round((item.value / totalIncome) * 100);\n    } else {\n      percent = \"--\";\n    }\n    return percent;\n  }\n};\n\nexport const totalPercentage = (transaction, totalExpense) => {\n  const totalIncome =\n    transaction.map((t) => t.value).filter((v) => v > 0).length > 0\n      ? transaction\n          .map((t) => t.value)\n          .filter((v) => v > 0)\n          .reduce((acc, curr) => acc + curr)\n      : 0;\n  let percentage;\n\n  if (totalIncome > 0 && totalIncome - totalExpense > 0) {\n    // calculate percentage\n    percentage = Math.round((totalExpense / totalIncome) * 100);\n  } else {\n    percentage = -1;\n  }\n\n  return percentage;\n};\n","import React, { useContext } from 'react'\nimport {List, Text} from '@chakra-ui/core'\nimport TransactionItem from './TransactionItem';\nimport { TransactionContext } from '../../context/TransactionContext';\n\nexport default function TransactionList({ deleteTransaction}) {\n\n  const {transaction} = useContext(TransactionContext)\n\n  return (\n    <List>\n       <Text textAlign='center' fontSize=\"md\">Transaction History</Text>\n        { transaction.map(item => <TransactionItem key={item.id} item={item} deleteTransaction={deleteTransaction}/>)}\n    </List>\n  )\n}\n","import {\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Select,\n  Flex,\n} from \"@chakra-ui/core\";\nimport React, { useState, useContext } from \"react\";\nimport { TransactionContext } from \"../../context/TransactionContext\";\nimport { useEffect } from \"react\";\n\nexport default function TransactionInput() {\n  const [item, setItem] = useState({\n    description: \"\",\n    value: \"\",\n  });\n\n  const [select, setSelect] = useState(\"+\");\n\n  const [bg, setBg] = useState('tomato')\n\n  const { addTransaction } = useContext(TransactionContext);\n\n  const handleInput = (e) => {\n    setItem({\n      ...item,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (item.description !== \"\" && item.value !== \"\" && item.value !== 0) {\n\n      addTransaction(item, select);\n      setItem({\n        description: \"\",\n        value: \"\",\n      });\n    }\n  };\n\n  const handleSelect = (e) => {\n    setSelect(e.target.value);\n  };\n\n  useEffect(() => {\n\n    if (select === '+' ) {\n      setBg('#319795')\n    } else {\n      setBg('tomato')\n    }\n\n  }, [select])\n\n\n  return (\n    <form style={{ marginBottom: \"1rem\" }} onSubmit={handleSubmit}>\n      <FormControl marginBottom=\"5px\">\n        <FormLabel htmlFor=\"description\">Description</FormLabel>\n        <Input\n          fontSize=\"xs\"\n          onChange={handleInput}\n          name=\"description\"\n          value={item.description}\n          type=\"text\"\n          color=\"black\"\n          placeholder=\"Transaction note\"\n          isRequired\n        />\n      </FormControl>\n      <FormControl marginBottom=\"20px\">\n        <FormLabel htmlFor=\"value\">Amount</FormLabel>\n        <Flex justifyContent=\"space-between\">\n          <Input\n            fontSize=\"xs\"\n            type=\"number\"\n            color=\"black\"\n            value={item.value}\n            onChange={handleInput}\n            name=\"value\"\n            placeholder=\"$--\"\n            flexBasis=\"75%\"\n            isRequired\n          />\n          <Select\n            backgroundColor={bg}\n            borderColor={bg}\n            color=\"white\"\n            flexBasis=\"20%\"\n            onChange={handleSelect}\n            value={select}\n          >\n            <option value=\"+\">+</option>\n            <option value=\"-\">-</option>\n          </Select>\n        </Flex>\n        <FormHelperText fontSize=\"xs\" id=\"email-helper-text\" textAlign='right'>\n          Select transaction type \n        </FormHelperText>\n      </FormControl>\n      <Button type=\"submit\" variantColor=\"blue\" minW=\"100%\">\n        Submit\n      </Button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/core\";\n\nimport NumberFormat from \"react-number-format\";\n\nexport default function TotalExpense({ totalExpense, totalExpensePercent }) {\n  console.log(\"rendering\");\n\n  return (\n    <div>\n      <Text textAlign=\"right\" fontSize=\"md\" fontWeight='bold'>\n        Expenses\n      </Text>\n      <hr style={{ borderColor: \"#4A5568\" }} />\n      <Text paddingY=\"10px\" textAlign=\"right\" fontSize=\"md\" color=\"orange.500\">\n        <NumberFormat\n          value={totalExpense}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"- $\"}\n        />\n        <span style={{ border: \"1px solid #DD6B20\", borderRadius: '5px', padding:'5px', marginLeft:'5px' }}>\n          {totalExpensePercent > 0 ? totalExpensePercent : \"--\"}%{\" \"}\n        </span>\n      </Text>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/core\";\nimport NumberFormat from \"react-number-format\";\n\nexport default function TotalIncome({totalIncome}) {\n\n  return (\n    <div>\n      <Text textAlign=\"right\" fontSize=\"md\" fontWeight='bold'>\n        Income\n      </Text>\n      <hr style={{ borderColor: \"#4A5568\" }} />\n      <Text  paddingY=\"10px\" textAlign=\"right\" color=\"teal.300\">\n      <NumberFormat value={totalIncome} displayType={'text'} thousandSeparator={true} prefix={'+ $'} />\n      </Text>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport TotalExpense from \"./TotalExpense\";\nimport TotalIncome from \"./TotalIncome\";\nimport { totalPercentage } from \"../../utils/itemPercentage\";\nimport { calcTotalExpense, calcTotalIncome } from \"../../utils/calculateTotal\";\nimport { TransactionContext } from \"../../context/TransactionContext\";\n\nexport default function Totals() {\n\n  const {transaction} = useContext(TransactionContext);\n\n  const totalExpense = calcTotalExpense(transaction)\n\n  const totalIncome = calcTotalIncome(transaction)\n\n  const totalExpensePercent = totalPercentage(transaction, totalExpense)\n\n\n  return (\n    <div className=\"totals\" style={{marginBottom : '1rem'}}>\n      <TotalIncome totalIncome={totalIncome} />\n      <TotalExpense totalExpense={totalExpense} totalExpensePercent={totalExpensePercent} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useLocalStorage } from \"./localstorage\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const useData = () => {\n  const [data, setData] = useState({\n    Transactions: [],\n  });\n\n  const addTransaction = (item, type) => {\n    let { description, value } = item;\n    \n    value = type === '-' ? `-${value}` : value\n\n    console.log(type)\n\n    const id = uuidv4();\n    const newItem = {\n      id,\n      description,\n      value: parseInt(value),\n    };\n    setData({ ...data, Transactions: [...data.Transactions, newItem] });\n  };\n\n  const deleteTransaction = (id) => {\n    setData({\n      ...data,\n      Transactions: data.Transactions.filter((item) => item.id !== id),\n    });\n  };\n\n  useLocalStorage(data, setData);\n\n  return {\n    data,\n    addTransaction,\n    deleteTransaction,\n  };\n};\n","import { useEffect } from \"react\";\n\nconst LOCAL_STORAGE_KEY = 'budgetapp'\n\nexport const useLocalStorage = (state, setState) => {\n  useEffect(() => {\n    if (state.Transaction) {\n      const storageState = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n      setState(storageState);\n    }\n  },);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state));\n  }, [state]);\n}","import React from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport Header from \"../components/Header/Header\";\nimport TransactionList from \"../components/Transaction/TransactionList\";\nimport TransactionInput from \"../components/Input/TransactionInput\";\nimport { TransactionContext } from \"../context/TransactionContext\";\nimport Totals from \"../components/Totals/Totals\";\nimport { useData } from \"../utils/state\";\n\n\n\nfunction App() {\n  const {data, addTransaction, deleteTransaction} =  useData()\n\n  return (\n    <ThemeProvider>\n      <CSSReset />\n\n        <TransactionContext.Provider value={{ \n          transaction : data.Transactions,\n          addTransaction,\n          deleteTransaction\n          }}>\n          <main>\n          <Header transactions={data.Transactions} />\n          <Totals/>\n          <TransactionInput  />\n          <TransactionList  />\n          </main>\n        </TransactionContext.Provider>\n      \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './container/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}